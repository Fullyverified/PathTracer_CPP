Standard Room:

SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,-3,0),Vector3(14,1,7),1,1,1,0,0,0,0.75,1,0)); // floor
SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,0),Vector3(14,1,7),1,1,1,0,0,0,0.75,1,0)); // roof

SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(8,0,0),Vector3(1,6,7),1,1,1,0,0,0,0.75,1,0)); // back wall

SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,3),Vector3(14,12,1),1,0,0,0,0,0,0.75,1,0)); // left wall
SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,-3),Vector3(14,12,1),0,1,0,0,0,0,0.75,1,0)); // right wall wall

SceneObjectsList.emplace_back(new Sphere(Vector3(5,-1.7,1),0.8,0.8,0.8,1,1,1,0,0,0,1,1,0)); // left sphere on floor
//SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(5,-1.7,1),Vector3(1,1,1),1,1,1,0,0,0,0,1,0)); // left cube on floor
SceneObjectsList.emplace_back(new Sphere(Vector3(5,-1.7,-1),0.8,0.8,0.8,1,1,1,0,0,0,0,1,0)); // right sphere on floor

SceneObjectsList.emplace_back(new Sphere(Vector3(5,2.5,0),1,0.1,1,1,1,1,40,40,40,0.75,1,0)); // light on ceiling

Surrounding Spheres:

SceneObjectsList.emplace_back(new Sphere(Vector3(5,2.5,2.5),1,1,1,1,1,1,0,0,0,1,1,0)); // left top
SceneObjectsList.emplace_back(new Sphere(Vector3(5,2.5,0),1,1,1,1,1,1,0,0,0,0.8,1,0)); // middle top
SceneObjectsList.emplace_back(new Sphere(Vector3(5,2.5,-2.5),1,1,1,1,1,1,0,0,0,0.7,1,0)); // left top

SceneObjectsList.emplace_back(new Sphere(Vector3(5,0,2.5),1,1,1,1,1,1,0,0,0,0.6,1,0)); // middle left
SceneObjectsList.emplace_back(new Sphere(Vector3(5,0,0),1,1,1,1,1,1,40,40,40,0.5,1,0)); // middle light
SceneObjectsList.emplace_back(new Sphere(Vector3(5,0,-2.5),1,1,1,1,1,1,0,0,0,0.4,1,0)); // middle right

SceneObjectsList.emplace_back(new Sphere(Vector3(5,-2.5,2.5),1,1,1,1,1,1,0,0,0,0.3,1,0)); // bottom left
SceneObjectsList.emplace_back(new Sphere(Vector3(5,-2.5,0),1,1,1,1,1,1,0,0,0,0.2,1,0)); // bottom light
SceneObjectsList.emplace_back(new Sphere(Vector3(5,-2.5,-2.5),1,1,1,1,1,1,0,0,0,0,1,0)); // bottom right

Extended Room:

    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(0,-1,-16),Vector3(32,0,16),1,1,1,0,0,0,0.75,1,0)); // floor
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(25,0,-16),Vector3(26,15,16),1,1,1,0,0,0,0.75,1,0)); // back wall

    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(0,0,-15),Vector3(30,15,-14),1,1,1,0,0,0,0.75,1,0)); // right wall
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(0,0,14),Vector3(30,15,15),1,1,1,0,0,0,0.75,1,0)); // left wall

    SceneObjectsList.emplace_back(new Sphere(Vector3(10,15,11),1.5,1.5,1.5,1,1,1,40,40,40,1,1,0)); // light

    // back row
    SceneObjectsList.emplace_back(new Sphere(Vector3(14,2,6),2,2,2,1,1,1,0,0,0,0.9,1,0)); // right
    SceneObjectsList.emplace_back(new Sphere(Vector3(14,2,0),2,2,2,1,1,1,0,0,0,0.3,1,0)); // left
    SceneObjectsList.emplace_back(new Sphere(Vector3(14,2,-6),2,2,2,1,1,1,0,0,0,0.1,1,0)); // middle

    // coloured spheres
    SceneObjectsList.emplace_back(new Sphere(Vector3(9,1,6),1,1,1,1,0,0,0,0,0,0.75,1,0)); // red
    SceneObjectsList.emplace_back(new Sphere(Vector3(9,1,0),1,1,1,0,0,1,0,0,0,0.75,1,0)); // blue
    SceneObjectsList.emplace_back(new Sphere(Vector3(9,1,-6),1,1,1,0,1,0,0,0,0,0.75,1,0)); // green

    // floor rectangles
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(9,0.125,3),Vector3(3,0.25,3),1,1,1,0,0,0,0.75,1,0)); // floor
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(9,0.125,-3),Vector3(3,0.25,3),1,1,1,0,0,0,0.75,1,0)); // back wall

    // spheres on rectangles
    SceneObjectsList.emplace_back(new Sphere(Vector3(9,1.25,3),1,1,1,1,1,1,0,0,0,1,1,0)); // Red sphere
    SceneObjectsList.emplace_back(new Sphere(Vector3(9,1.25,-3),1,1,1,1,1,1,0,0,0,0.05,1.53,0.95)); // Glass sphere

    // elevated spheres
    SceneObjectsList.emplace_back(new Sphere(Vector3(15,7.5,8.5),1,1,1,1,1,1,0,0,0,0,1,0)); // left
    SceneObjectsList.emplace_back(new Sphere(Vector3(15,7.5,0),1,1,1,1,1,1,0,0,0,0,1,0)); // middle
    SceneObjectsList.emplace_back(new Sphere(Vector3(15,7.5,-8.5),1,1,1,1,1,1,0,0,0,0,1,0)); // right
	// suggested fOV: 20

Colour Blending:
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,-3,0),Vector3(14,1,7),white)); // floor
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,0),Vector3(14,1,7),white)); // roof

    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(8,0,0),Vector3(1,6,7),white)); // back wall

    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,3),Vector3(14,12,1),white)); // left wall
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(10,3,-3),Vector3(14,12,1),white)); // right wall

    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(7,0,-1.6),Vector3(2,6,0.5),redGlow)); // right
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(7,0,0),Vector3(2,6,0.5),blueGlow)); // middle
    SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(7,0,1.6),Vector3(2,6,0.5),greenGlow)); // left




Ray Tracing in one weekend DEMO:
SceneObjectsList.emplace_back(new AABCubeCenter(Vector3(0,-0.5,0),Vector3(200,1,200),1,1,1,0,0,0,0.75,1,0)); // floor
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(-20,100,-20),Vector3(20,101,20),1,1,1,40,40,40,0.75,1,0)); // roof

    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(100,0,-100),Vector3(101,100,100),0.3,0.6,0.745,0,0,0,0.75,1,0)); // front
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(-101,0,-100),Vector3(-100,100,100),0.3,0.6,0.745,0,0,0,0.75,1,0)); // front
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(-100,0,100),Vector3(100,100,101),0.3,0.6,0.745,0,0,0,0.75,1,0)); // front
    SceneObjectsList.emplace_back(new AABCubeBounds(Vector3(-100,0,-101),Vector3(100,100,-100),0.3,0.6,0.745,0,0,0,0.75,1,0)); // front


    SceneObjectsList.emplace_back(new Sphere(Vector3(-3.5,1.5, 0),1.5,1.5,1.5,1,1,1,0,0,0,0,1,0)); //
    SceneObjectsList.emplace_back(new Sphere(Vector3(0,1.5, 0),1.5,1.5,1.5,1,1,1,0,0,0,0.1,1.53,0.95)); //
    SceneObjectsList.emplace_back(new Sphere(Vector3(3.5,1.5, 0),1.5,1.5,1.5,1,1,1,0,0,0,1,1,0)); //

    std::mt19937 rng;
    std::uniform_real_distribution<float> pos(-50,50);
    std::uniform_real_distribution<float> col(0,1);
    for (int i = 0; i < 600; i++) {
        int x = pos(rng);
        int z = pos(rng);
        float r = col(rng);
        float g = col(rng);
        float b = col(rng);
        SceneObjectsList.emplace_back(new Sphere(Vector3(x,0.5, z),0.5,0.5,0.5,r,g,b,0,0,0,0.75,1,0)); // sphre with random pos
    }
    
    Camera *cam = new Camera(Vector3(-10, 1.5, 6), Vector3(1, 0, -0.5));




Materials:
    Material white{Vector3(1, 1, 1), 0.75, 0, 1, 0, 0};
    Material red{Vector3(1, 0, 0), 0.75, 0, 1, 0, 0};
    Material green{Vector3(0, 1, 0), 0.75, 0, 1, 0, 0};
    Material light{Vector3(1, 1, 1), 0.75, 0, 1, 0, 40};

    Material metal{Vector3(1, 1, 1), 0.5, 1, 1, 0, 0};
    Material plastic{Vector3(1, 1, 1), 0.8, 0, 1, 0, 0};

    Material bluePlastic{Vector3(0.4, 0.4, 1), 0.8, 0, 1, 0, 0};

    Material redGlow{Vector3(1, 0, 0), 0.75, 0, 1, 0, 20};
    Material blueGlow{Vector3(0, 1, 0), 0.75, 0, 1, 0, 20};
    Material greenGlow{Vector3(0, 0, 1), 0.75, 0, 1, 0, 20};
